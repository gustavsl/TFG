%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 304.000000 132.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12 (Build 16A320) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 304 132
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 304 132
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /F put
dup 34 /T put
dup 35 /p put
dup 36 /a put
dup 37 /r put
dup 38 /space put
dup 39 /c put
dup 40 /d put
dup 41 /f put
dup 42 /m put
dup 43 /e put
dup 44 /colon put
dup 45 /b put
dup 46 /s put
dup 47 /asciicircum put
dup 48 /two put
dup 49 /fi put
dup 50 /l put
dup 51 /t put
dup 52 /o put
dup 53 /g put
dup 54 /braceleft put
dup 55 /one put
dup 56 /comma put
dup 57 /ellipsis put
dup 58 /three put
dup 59 /braceright put
dup 60 /D put
dup 61 /C put
dup 62 /zero put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<

206A61645258238A592FFD2DB800192C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8001A2C2020456944B001602020457D691844B001602DB8001B2CB8001A2A2DB8001C2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8001D2C4B535845441B2121592D00020033000101CC02C8000300070065B800142BB800082FB800002FB8000810B80006D0B800062FB900020003F4B8000010B900040003F4B80009DC00B800014558B800042F1BB90004000A3E59B800014558B800052F1BB9000500043E59B8000410B900000002F4B8000510B900020002F4303101211121131121110199FECD013333FE67029AFD950299FD3902C700010053FF6E00C2006F000C002DBA000C000000032BB8000C10B8000010B80007D0B800072FBA00080000000C11123900B800082FB800002F3031371533160E0207153E013D01533B01050E17113A346F6F0C1C1B170632115239650002002AFFF5020202C50017003300CBB800342FB800352FB8003410B80018D0B800182FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8003510B80026DCB8000EDC410500DA000E00EA000E00025D411B0009000E0019000E0029000E0039000E0049000E0059000E0069000E0079000E0089000E0099000E00A9000E00B9000E00C9000E000D5D00BA0013001F00032BB8001310BA002D000700032BB8002D10303113343E0433321E0415140E0223222E0227141E0433323E0435342E0423220E0484010911213224243221110901051B3C36363C1B055A04101E344F37384E341E100404101E344F37374F341E1004015D1A3F3F3C2D1C1C2D3C3F3F1A2863573C3C57632727545047361F1F364750542727545048362020364850540000000100570000016402C5000A0023BA0001000900032BB800011000B800012FB800002FBA0007000800032BB800071030312111230E03231533110164410726374424B802C528341E0B44FE0400010018000001EE02C5002B0091B8002D2FBA0001000000032BB8000110B8002D10B80022DCB8000BDC410500DA000B00EA000B00025D411B0009000B0019000B0029000B0039000B0049000B0059000B0069000B0079000B0089000B0099000B00A9000B00B9000B00C9000B000D5DB8002210B80016D0B800162FB8000110B80018D0B800182F00BA0018001500032BBA0027
000600032BB800271030311333263E0233321E0215140E02070E03072135213E03373E0335342E0223220E022C55010F2235251C322516172D442D254436230501CFFE940627374221213E301D233C512E38583B1C01CA203F321F12222F1D2538302F1C163242593F4B21332C2714152E39482F324C331B26435C000001001DFFF501FE02C5003E0123BA0010001100032BB8001010BA001B000800032BB8001B10410500DA000800EA000800025D411B0009000800190008002900080039000800490008005900080069000800790008008900080099000800A9000800B9000800C90008000D5DBA001F0011001B111239BA00220008001B111239B800222FBA002C00110010111239B8002C2FB8002DDCB8002210B80035DC410500DA003500EA003500025D411B0009003500190035002900350039003500490035005900350069003500790035008900350099003500A9003500B9003500C90035000D5DB8001B10B80040DC00BA000D001600032BB8000D10BA0027003200032BB8002710BA003A000300032BB8003A10B8000310B80001D0B800012FBA001F0003003A111239B8003A10B8003DD0303113153633321E0215140E022322262723061E0233323E0235342627353E0135342E0223220E020733343E0233321615140E022B01222322DA181B20372818192A381F494C025501213E5836325942273F412A38213A4F2E3551361D02551021332236481625311B12050504019548031123332120332313574537563B1E1B365135405E0E02134A3031482E17223C54331F382A1939391C2C1D0F0000020053000000C20205000300070037BA0001000200032BB8000110B8000210B80004D0B8000110B80006D000BA0004000500032BB8000410BA0001000000032BB800011030311335231511153335C26F6F01966F6FFED96F6F00000001002BFFF002AA02DB0025006DBA001E000B00032BB8001E10411B0006001E0016001E0026001E0036001E0046001E0056001E0066001E0076001E0086001E0096001E00A6001E00B6001E00C6001E000D5D410500D5001E00E5001E00025D00BA0019001000032BB8001910BA0006002300032BB8000610303101332E0323220E0215141E0233323637230E0323222E0235343E0233321602445F08344E6438527F552C29527C53899E0E5F031E35492F405C3B1C1C3B5B404B6D01F339573A1E3B66894E4E88643996872C4C371F30516D3D386851304C0000000002004E0000029A02CA000E0019007DB8001B2FBA0001000F00032BB8000110B8001B10B80016DCB80007DC410500DA000700EA000700025D411B0009000700190007002900070039000700490007005900070069000700790007008900070099000700A9000700B9000700C90007000D5D00BA0000001000032BB8000010BA





03E8006F0206000C04BE003700000048004800760122014801D002B602E4035203BA03E6040C042C053605CE064006DE074607920844085E08F809980A300A5E0B020B540BBE0C220C7A0CF40D2A00000001000000200096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 32 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/zero 3 def
/one 4 def
/two 5 def
/three 6 def
/colon 7 def
/C 8 def
/D 9 def
/F 10 def
/T 11 def
/asciicircum 12 def
/a 13 def
/b 14 def
/c 15 def
/d 16 def
/e 17 def
/f 18 def
/g 19 def
/l 20 def
/m 21 def
/o 22 def
/p 23 def
/r 24 def
/s 25 def
/t 26 def
/braceleft 27 def
/braceright 28 def
/ellipsis 29 def
/fi 30 def
/uni2B91 31 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C931313987B77B87D3A530FEA8139219B56B58888BA339BA81F732C1729802DA479E44F824526137EEB725F9A8277E11FB440D7432A2FB2F8DA2BCCD532B90735191BAC4AF35F550E035C4C8C1BAC2797ED4C005EE32CFA64F85F936DA558E85ADDE29C5BBD37B20D3D0BF4E451339B09833F191BAD285848DBE421CAB8F5A39CAA3570C6D3D1F23FF987A584B1F8BA2C26D01593F137DF77C7259B5342C3814CE43A77E9C2FCEAA7E04E16B6C1C59057F4EDD919237C6C63FD04FE3A1C96BD50326C81B39457BA308EC79FBF27742A8CC75657D670FE2B8C450321A72974D618EB650B3E78D3BF0B96AFF4153210EE8FC25E9DE65E2DF6EBEC4874BEF9BF31845E8DDF1F533F2EECE7993784B0582F0E72FEE10FA1D17386951AF2AA54860E3437997BE8E10D0BE652B59AEC33E65526E54083B1BB48F60C7097295DE5593AFA4A2D997FC66DBB9EE219E08FA1E3DDC9160D4F9F4A79347DC7C041559EB022478B37EA628D9820A3A0BCE107FD79A9F4CA1F8D64B8E2A7F7E90685846B14A45C17234965862ADA07914D3147A2098A6A38D5116E08795B072C45969214D29E2BCA0CE350C64462CEEE1873BCA576840776683FE46A19094BBB4F0ED12533717D7B52A42A9D1810F5ACEF2F793F1C09471AAE2A7E08E7DBAAD4EA7BFEF47D4F52FE37BE0DE2AA20D8CC2927064BD596667C685576BA129EABE0A141B071F698B1B6F010DF2FA2510ECB2F3619AEA4EAD7B723E3E4A8E768F7662806892499B68D6D



1C43D3A4444B93EC3E0007CCFC3D014B3B955A35B7615A37FA49D233B12D5C042855FAE066AFF218EA1C5AF2DAC0CE1F4083CDEA6700E5CA5B815234F948A1CC5FBC54AFDFA2DF2A49ACB05ACDC7FBCD706B7097A0DB17D2713135D519F9DD44550575BFBBEA7D814304F305486125CD2C4FD751E9515E8B3FE52757D944347AFC531B752200395D75C53A86AEEF6CBA79F1072C4E03A935455F537E464CB5CF01A2952CE36A90A476A8B51935BB94EB9A7E36EF2355B1DDA894AD64E4FE89D8C1E2D5D016623F886948358B293C529F6BE00979996BD1119C8A71E50C672FAE46AADD28CD5FD077F311DFF3154883A7F4111009B2E7899C9C22E6FF5F7A6984FD1790C24E6851B826B0D68B090B08D9259C966F62A0F023B8D24442FBB3AE1109F3808EF21287DA02A3404EF7D8A0B080D1D8FD93F458BC9D6AB2A71890462F4F9F02F0416C4D67A441826279774AE61EC79343C19E1AAA89315E26E197A9E172929B26A8FB7D5FFD0AB7B53EDED73F600A30F453A2344464BD76611E6C1FA6547702E8BF6215792AD9144EBF21E966EB94062DD4157915103183E9B68171652886E65A6A38E5B287FC062821E8F195E66C2727453B23DA323F867B18C49F4D6A9428C67DD866101538A942EEF02C530F1429761305DDC23E921EC031109AF4EC4EB5E920FE1C37A6DD2323D767247F38260C506FC3941F71FB5A32147936FDC32EABF614C47A322FDF88F56978F19D5D84F3F027DC3941BCD6031788A0FA5D91652CA069B41B0A61E8702417910FE5C38E29105DAD9614845DD196F2C73B6E8D4ED71DE84758B5B1AFC3E403715B89356940E64844F0D80629AD5399480C51FFAEC0A445D1BC72E94AA9201293FA2FB01CF893D9A0F306F54CE92100F1544FAD5E7FC64F887F40CA83B3B34D56C3B51A99362CAC76EED26C938682FAD654ADDD2A84AAA44C4DE23BBF541EF13D01C299B39DD0E9E477794C12C02FC79880DD9259355E9C26245C87169CC22F2478AB6A09986A6E3D4D072F1BD5FE261B23FA2CD9F57A24F57414274FE103884542EC500C61CA6E3DEB8A4ED05423364AD3CB98F65E1B39A56BF20C34C751BCFEAE0D84FE1E538B0B1C8D2C40766F1D7B7F86925CFBD4DF09BC6E3144F47C60E223489579B3B706C80A1450BAA35BCD86DB8AF85DBFA425A1CCF4C2FA8B132CCB6312F911B1916341F758632A3B63B7D767257D18015EE858D8FFEB7B7171079EED613D13A3A836FA7176B74117974E0CB5D26E672CD1FFCA89AAEF89C45D605866A5C2CF90B90EC059671D365E48603C148114570867AB9807CDA6D177831AB997BBB9C8C9B661400E982F183BFC0699BD8F6529139E88AC534DF95D7224F69337DDBA72C4EDD69DC5916E78FDB3621144A64EF60F5FDADE1B508A2EDDFA6DA7FAF4F03ADF6916C4343205B9FD5855C88BD1

70623CD60D4E69582BD2D61A50580AA03BAD993D7E08FC1A5DBD5039198FF282AF4309DEA23F2EED84D948BE3417C498F13013A7B668CF77C08D96A367185E20989727F85618F9DB027753C78782E5CA3437947F8A48B4A4E191350956EF50D049A6EAEBC7DEC058BC36310AE4434B8EBAB8BE817BEA4A96BA4EC923CE3B5E5B5AC07B96325915665B3F5F3B8B58542F6F3A78CFF30E9CD4F560B7D474D09D3F384B160E4232332E07F52818D72A803879C2594E832FDB4EE53DAAA47CFA79512B11C09069CCBEF7533B97D5063D392D9BACBF8911C590A9B6A68E9A174CD3B4BC9B06C7AB272CC3FE1D1A522C9A4B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /M put
dup 34 /F put
dup 35 /C put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 6 dict dup begin
/.notdef 0 def
/C 1 def
/F 2 def
/M 3 def
/uni2B90 4 def
/uni2B91 5 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1018 -481 1437 1141}def
/UniqueID 4258367 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C96AC05D8620AE2086072F250ADD3256490B02A185DDD3083C39A0A31F6E9B7945802A8663482703ECF28F0C85C7841F9019F9AB35B15960043CE4F99558274C4E4C5D35B36F092CEDBC42463C78A54D8577D6DC793827D13C75A0EF33D3ED2CDC3788EBC1C0E48C876AEE70FC1754E44F6191F212852DBAE4BA4D05C7707D9193F486EB6417CE3D5B7381176906217915B5A2CEF848A4AC7AC952A7E4D7A119FDBB1DB081A9BD017D7D90BED918A528A8466C83904F9A9E3F01F569123E574A478D1804823D836C76590C20F9D45E30C88D98C2ADFEA7A2B3A383198F1EDD18A8DEADE6CEF47BD333B1DF20260C5CAF81069158A14397B36980375C7AB608677CB8A8864FE21348348E9B161B26F2716F477F89BF155C3FD7CEF380D0216AFF36B2C180FAFD7FB460265DC416DEDE1B59B3975C886C00B8FF2FE1F30194E3006EE4531FE055086C7C4ED68711AC007440BB10F1BF7D860CB654410753830B9E5050C943007033D760C680F25C489C8406FBB0A41F50BFC93B117F7494C73B8B78651DF382AE2A295BCAEA1F172E59B8A722E4E5B0DA738000B18DFAF37E6AB194B9723A97C87A5678A04E62BFBA8041B639B7BFCA85ACF9639F0E0352AF50E0A776DCB222BB59F29D5A329F590560DFA21B0E2491256B3C42ADC6283DCE57A57D1B267972C4B744C013C7EBEEFEFC02A51E90EEE678B76373D8FDB88FCA2DD72FEE146829B0955DC9C7A5302F0E880C52D172D8CF46805798AEE1C4D668395F7F8
54533F042D95BC1EBBC89F66E406A031C21A78E8A238624F600B28E6B67FF25831947131A9F5E75107510604F9775D42DE2357E81AC07213866300560146C83C504AE931746C47A944441EAD9FAD2590D825DAFF7418F3BFE1E26014624F68F0D4BE8B7D11864F759EC56899C605C251BF423321F2FF1413748C6D528A6454F29F3FE2C75F0CEA9DF204BF498A768586186404B927682F7F2CB64128BA07ECEB28A420CE5CE4E115CAB66D2DE1026AEA079750D5F25DB8C78E4420619CEE12AB6491ED0390FC952777D955D1DF61B652371D3C05CEC997A68A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F2.1/HelveticaNeue-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 304 132 rc
14.755904 110.18898 m
43.10236 110.18898 l
43.10236 90.346458 l
14.755904 90.346458 l
h
14.755904 110.18898 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -178 422 cm
192.75591 311.81104 m
221.10236 311.81104 l
221.10236 331.65353 l
192.75591 331.65353 l
h
192.75591 311.81104 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 28.929132 100.26772 cm
/F1.1[ 9 0 0 -9 0 0]sf
-7.7490001 3.3740005 m
(!!")[ 5.166000 5.166000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -178 422 cm
221.10236 323.1496 m
230.55389 322.7558 l
S
0 i
CM
60.546963 99.577255 m
52.429005 102.24161 l
52.678787 96.246811 l
h
60.546963 99.577255 m
f
0 J
0 j
1 0 0 -1 -178 422 cm
238.54697 322.42276 m
230.429 319.75839 l
230.67879 325.7532 l
h
238.54697 322.42276 m
S
/Cs2 SC
0 sc
1 0 0 -1 36.082676 120.68898 cm
/F1.1[ 8 0 0 -8 0 0]sf
-30.375999 2.8880005 m
(#$%$&'$\($&\)%$*+,)[ 4.744000 4.296000 2.664000 4.296000 2.224000 4.296000 4.296000 4.744000 4.296000 2.224000 2.368000 2.664000 4.296000 6.824000 4.296000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
62.944881 110.18898 m
91.291336 110.18898 l
91.291336 90.346458 l
62.944881 90.346458 l
h
62.944881 110.18898 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -178 422 cm
240.94489 311.81104 m
269.29135 311.81104 l
269.29135 331.65353 l
240.94489 331.65353 l
h
240.94489 311.81104 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 77.118111 100.26772 cm
/F1.1[ 9 0 0 -9 0 0]sf
-7.335 3.3740005 m
($-.)[ 4.833000 5.337000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -178 422 cm
269.79135 321.73227 m
278.73386 321.73227 l
S
0 i
CM
108.73386 100.26773 m
100.73386 103.26773 l
100.73386 97.267731 l
h
108.73386 100.26773 m
f
0 J
0 j
1 0 0 -1 -178 422 cm
286.73386 321.73227 m
278.73386 318.73227 l
278.73386 324.73227 l
h
286.73386 321.73227 m
S
1 1 1 sc
CM
111.13386 110.18898 m
139.48032 110.18898 l
139.48032 90.346458 l
111.13386 90.346458 l
h
111.13386 110.18898 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -178 422 cm
289.13385 311.81104 m
317.48032 311.81104 l
317.48032 331.65353 l
289.13385 331.65353 l
h
289.13385 311.81104 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 125.30708 100.26772 cm
-5.2020001 3.3740005 m
(/0)[ 5.400000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -178 422 cm
317.98032 321.73227 m
326.92282 321.73227 l
S
0 i
CM
156.92284 100.26772 m
148.92284 103.26772 l
148.92284 97.267715 l
h
156.92284 100.26772 m
f
0 J
0 j
1 0 0 -1 -178 422 cm
334.92282 321.73227 m
326.92282 318.73227 l
326.92282 324.73227 l
h
334.92282 321.73227 m
S
1 1 1 sc
CM
159.32283 110.18898 m
187.6693 110.18898 l
187.6693 90.346458 l
159.32283 90.346458 l
h
159.32283 110.18898 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -178 422 cm
337.32285 311.81104 m
365.66928 311.81104 l
365.66928 331.65353 l
337.32285 331.65353 l
h
337.32285 311.81104 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 173.49606 100.26772 cm
/F1.1[ 7 0 0 -7 0 0]sf
-8.5539999 2.9020004 m
(123%4.)[ 3.626000 1.554000 2.205000 2.205000 4.018000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -178 422 cm
366.16885 322.34366 m
375.62039 322.73746 l
S
0 i
CM
205.61345 98.929497 m
197.74529 102.25993 l
197.4955 96.265137 l
h
205.61345 98.929497 m
f
0 J
0 j
1 0 0 -1 -178 422 cm
383.61346 323.0705 m
375.74527 319.74005 l
375.49551 325.73486 l
h
383.61346 323.0705 m
S
1 1 1 sc
CM
207.51181 110.18898 m
235.85826 110.18898 l
235.85826 90.346458 l
207.51181 90.346458 l
h
207.51181 110.18898 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -178 422 cm
385.51181 311.81104 m
413.85828 311.81104 l
413.85828 331.65353 l
385.51181 331.65353 l
h
385.51181 311.81104 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 221.68504 100.26772 cm
/F1.1[ 9 0 0 -9 0 0]sf
-6.165 3.3740005 m
(245)[ 1.998000 5.166000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -178 422 cm
414.35828 321.7323 m
423.30078 321.7323 l
S
0 i
CM
253.30078 100.26771 m
245.30078 103.26771 l
245.30078 97.267708 l
h
253.30078 100.26771 m
f
0 J
0 j
1 0 0 -1 -178 422 cm
431.30078 321.7323 m
423.30078 318.7323 l
423.30078 324.7323 l
h
431.30078 321.7323 m
S
1 J
1 j
0.60000002 i
446.45099 362.75589 m
446.43958 375.11182 l
S
0 i
CM
268.43216 38.888191 m
271.43954 46.885414 l
265.43958 46.890961 l
h
268.43216 38.888191 m
f
0 J
0 j
1 0 0 -1 -178 422 cm
446.43216 383.11182 m
449.43954 375.11459 l
443.43958 375.10904 l
h
446.43216 383.11182 m
S
1 J
1 j
0.60000002 i
447.45026 332.15314 m
447.10977 340.52591 l
S
0 i
CM
268.78473 73.480698 m
272.1073 81.352196 l
266.11227 81.595985 l
h
268.78473 73.480698 m
f
0 J
0 j
1 0 0 -1 -178 422 cm
446.78473 348.51932 m
450.1073 340.6478 l
444.11227 340.40402 l
h
446.78473 348.51932 m
S
/Cs2 SC
0 sc
1 0 0 -1 268.1929 31.657482 cm
/F1.1[ 8 0 0 -8 0 0]sf
-24.228001 2.8880005 m
(6')[ 2.664000 0.000000 ] xS
/F1.1[ 4 0 0 -4 0 0]sf
-17.268 2.8880005 m
(7)s
/F1.1[ 8 0 0 -8 0 0]sf
-15.044 2.8880005 m
(8&')[ 2.224000 2.224000 0.000000 ] xS
/F1.1[ 4 0 0 -4 0 0]sf
-6.3000002 2.8880005 m
(0)s
/F1.1[ 8 0 0 -8 0 0]sf
-4.0760002 2.8880005 m
(8&98&')[ 2.224000 2.224000 8.000000 2.224000 2.224000 0.000000 ] xS
/F1.1[ 4 0 0 -4 0 0]sf
17.115999 2.8880005 m
(7:)[ 2.224000 0.000000 ] xS
/F1.1[ 8 0 0 -8 0 0]sf
21.563999 2.8880005 m
(;)s
/Cs1 SC
1 1 1 sc
CM
255.70079 110.18898 m
284.04724 110.18898 l
284.04724 90.346458 l
255.70079 90.346458 l
h
255.70079 110.18898 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -178 422 cm
433.70078 311.81104 m
462.04724 311.81104 l
462.04724 331.65353 l
433.70078 331.65353 l
h
433.70078 311.81104 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 269.87402 100.26772 cm
/F1.1[ 9 0 0 -9 0 0]sf
-9 3.3740005 m
(<=")[ 6.336000 6.498000 0.000000 ] xS
0.60000002 i
/Cs1 SC
1 0 0 sc
1 0 0 -1 -178 422 cm
420.9129 385.51181 m
471.93652 385.51181 l
471.93652 396.8504 l
420.9129 396.8504 l
h
420.9129 385.51181 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 267.6929 15.8189 cm
/F2.1[ 16 0 0 -16 0 0]sf
-23.856001 6.2679443 m
(!"##)[ 14.512000 9.488000 11.856000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -178 422 cm
413.85828 350.91733 m
479.05511 350.91733 l
479.05511 362.25589 l
413.85828 362.25589 l
h
413.85828 350.91733 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 268.02362 66.251968 cm
/F1.1[ 8 0 0 -8 0 0]sf
-29.712 2.8880005 m
(6')[ 2.664000 0.000000 ] xS
/F1.1[ 4 0 0 -4 0 0]sf
-22.752001 2.8880005 m
(>)s
/F1.1[ 8 0 0 -8 0 0]sf
-20.528 2.8880005 m
(8&')[ 2.224000 2.224000 0.000000 ] xS
/F1.1[ 4 0 0 -4 0 0]sf
-11.784 2.8880005 m
(7)s
/F1.1[ 8 0 0 -8 0 0]sf
-9.5600004 2.8880005 m
(8&')[ 2.224000 2.224000 0.000000 ] xS
/F1.1[ 4 0 0 -4 0 0]sf
-0.81599998 2.8880005 m
(0)s
/F1.1[ 8 0 0 -8 0 0]sf
1.408 2.8880005 m
(8&98&')[ 2.224000 2.224000 8.000000 2.224000 2.224000 0.000000 ] xS
/F1.1[ 4 0 0 -4 0 0]sf
22.6 2.8880005 m
(0>)[ 2.224000 0.000000 ] xS
/F1.1[ 8 0 0 -8 0 0]sf
27.048 2.8880005 m
(;)s
ep
end
%%Trailer
%%EOF
